@using TCSA.V2.Components.UI
@using TCSA.V2.Components.UI.SVGs
@using Components.Dashboard.Shared
@using Octokit.Webhooks.Models

<div class="horizontal-card-review tw-flex tw-items-center tw-justify-between shadow rounded @Status">
    <div class="tw-flex tw-items-center tw-gap-2 tw-flex-1">
        <div class="col-2">
            <img src="img/cards/@IconUrl" width="60" alt="...">
        </div>
        <div class="col-md-4 col-6 tw-flex tw-flex-col tw-gap-4">
            <a href=@Href target="_blank">
                <p class="card-title-dashboard-review">@Title</p>
            </a>
            <p class="project-card-text">@Name</p>
            <p class="project-card-submitted-duration xs:tw-hidden md:tw-block">@DurationOpen ago</p>
        </div>
        <div class="tw-flex tw-items-center tw-font-bold tw-gap-1 md:tw-text-lg tw-justify-center tw-w-full">
            <span class="xs:tw-hidden md:tw-block">Reward: </span>
            <img src="img/experience.png" width="25" class="tw-flex-shrink-0 md:tw-w-[30px]" alt="..."/>
            @ExperiencePoints
        </div>
    </div>
    <div class="tw-flex tw-items-center tw-gap-2 tw-flex-1 tw-justify-end">
        <div class="tw-flex tw-items-center">
            <div class="tw-flex tw-items-center tw-justify-center tw-gap-2">
                <div class="tw-px-6">
                    <a target="_blank" href=@GithubUrl class="tw-flex tw-flex-col tw-items-center tw-gap-1">
                        <ViewProjectSVG/>
                        <div class="dashboard-review-action-text">
                            View PR
                        </div>
                    </a>
                </div>
            </div>
            @if (Status != "is-assigned")
            {
                <div class="row text-center">
                    <div class="col-12 view-btn">
                        @if (IsLoading)
                        {
                            <LoadingSpinner />
                        }
                        else
                        {
                            <a target="_blank" href="" @onclick:preventDefault @onclick="OnAssign" class="tw-flex tw-flex-col tw-items-center tw-gap-1">
                                <TakeSVG />
                                <div class="col-12 dashboard-review-action-text">
                                    Take
                                </div>
                            </a>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="row text-center">
                    @if (IsLoading)
                    {
                        <LoadingSpinner />
                    }
                    else
                    {
                        <div class="col-6 view-btn">
                            <a target="_blank" href="" @onclick:preventDefault @onclick="OnMarkAsComplete" class="tw-flex tw-flex-col tw-items-center tw-gap-1">
                                <ApproveSVG />
                                <div class="col-12 dashboard-review-action-text">
                                    Approve
                                </div>
                            </a>
                        </div>
                        <div class="col-6 view-btn">
                            <a target="_blank" href="" @onclick:preventDefault @onclick="OnRelease" class="tw-flex tw-flex-col tw-items-center tw-gap-1">
                                <TakeSVG />
                                <div class="col-12 dashboard-review-action-text">
                                    Release
                                </div>
                            </a>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public string Name { get; set; }
    [Parameter] public string IconUrl { get; set; }
    [Parameter] public string GithubUrl { get; set; }
    [Parameter] public string Status { get; set; }
    [Parameter] public int ExperiencePoints { get; set; }
    [Parameter] public int ProjectId { get; set; }
    [Parameter] public string ProjectSlug { get; set; }
    [Parameter] public EventCallback OnAssignCallBack { get; set; }
    [Parameter] public EventCallback OnReleaseCallBack { get; set; }
    [Parameter] public EventCallback OnMarkAsCompleteCallBack { get; set; }
    [Parameter] public MarkupString DurationOpen { get; set; }
    public string Href { get; set; }
    public bool IsLoading { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        Href = $"project/{ProjectId}/{ProjectSlug}";
    }

    private async Task OnAssign()
    {
        IsLoading = true;
        await OnAssignCallBack.InvokeAsync();
        IsLoading = false;
    }

    private async Task OnMarkAsComplete()
    {
        IsLoading = true;
        await OnMarkAsCompleteCallBack.InvokeAsync();
        IsLoading = false;
    }

    private async Task OnRelease()
    {
        IsLoading = true;
        await OnReleaseCallBack.InvokeAsync();
        IsLoading = false;
    }
}

<style>
    .dashboard-review-action-text {
        color: var(--text-highlight-color);
    }

    .is-assigned {
        border: darkgoldenrod solid 2px;
    }
    
    .card-img-top {
        max-width: 50px !important;
    }

    .horizontal-card-review {
        padding: 10px 40px;
        border-radius: 15px;
        margin: 5px 0 !important;
        transition: all 200ms ease-in-out;
        background-color: var(--card-background-color);
    }

    .card-title-dashboard-review {
        padding-left: 10px;
        font-size: 18px;
        font-family: Roboto, sans-serif;
        color: var(--text-highlight-color);
        font-weight: 600;
    }

    .card-text {
        padding-left: 10px !important;
        margin-top: -15px !important;
    }

    .card-text-complete {
        margin-bottom: -20px;
        font-size: 18px;
        color: green;
        font-weight: 600;
    }

    .card-text-incomplete {
        font-size: 18px;
        color: red;
    }

    .incomplete-project {
        max-width: 80px;
        -webkit-filter: grayscale(100%);
        -moz-filter: grayscale(100%);
        -o-filter: grayscale(100%);
        -ms-filter: grayscale(100%);
        filter: grayscale(100%);
    }

    .completed {
        border: green solid 2px;
    }

    .community-btn {
        background-color: var(--text-highlight-color);
        color: white;
    }

    .project-card-text {
        padding-left: 10px !important;
        margin-top: -15px !important;
        margin-bottom: -5px !important;
        color: var(--text-color) !important;
        font-size: 15px;
    }    
    
    .project-card-submitted-duration {
        padding-left: 10px !important;
        margin-top: 0px !important;
        margin-bottom: -5px !important;
        color: var(--text-color) !important;
        font-size: 12px;
    }

    .experience-points-reviews {
        margin-top: 5px;
        margin-left: 4px;
        font-weight: 600;
    }

    .community-btn {
        width: 150px;
    }

    .card-img {
        margin-top: 10px;
    }

    .overdue {
        color: red;
    }
</style>