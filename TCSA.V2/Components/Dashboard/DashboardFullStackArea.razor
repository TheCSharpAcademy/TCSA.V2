@using TCSA.V2.Components.UI
@using TCSA.V2.Components.UI.SVGs
@using TCSA.V2.Helpers
@using TCSA.V2.Models

<HorizontalCard CardName="Full Stack Development"
                IsComplete=true
                IconUrl="console-300x300.png"
                Description="Description Here"
                OnClickCallback="@ToggleSteps"
                HasButton=true />

@if (Steps)
{
    <div class="ps-3">
        <CloseButtonSVG OnClickCallback="@ToggleSteps" />
        <HorizontalCard IsComplete=true
                        CardName="MVC"
                        IconUrl="icons8-mommy-and-me-classes-96.png"
                        Description="Description Here"
                        OnClickCallback="@ToggleMVCSteps" />

        <div class="ps-3">
            @if (MVCSteps)
            {
                <CloseButtonSVG OnClickCallback="@ToggleMVCSteps" />
                @foreach (var project in Projects.Where(x => x.Area == Area.MVC))
                {
                    <DashboardProjectCard Project="project"
                                          Status="completed" />
                }
            }
        </div>
        <HorizontalCard IsComplete=true
                        CardName="React"
                        Description="Description Here"
                        IconUrl="icons8-teenager-64.png"
                        OnClickCallback="@ToggleReactSteps" />

        <div class="ps-3">
            @if (ReactSteps)
            {
                <CloseButtonSVG OnClickCallback="@ToggleReactSteps" />
                @foreach (var project in Projects.Where(x => x.Area == Area.React))
                {
                    <DashboardProjectCard Project="project"
                                          Status="completed" />
                }
            }
        </div>

        <HorizontalCard IsComplete=true
                        Description="Description Here"
                        CardName="Angular"
                        IconUrl="icons8-executive-64.png"
                        OnClickCallback="@ToggleAngularSteps" />

        <div class="ps-3">
            @if (AngularSteps)
            {
                <CloseButtonSVG OnClickCallback="@ToggleAngularSteps" />
                @foreach (var project in Projects.Where(x => x.Area == Area.Angular))
                {
                    <DashboardProjectCard Project="project"
                                          Status="completed" />
                }
            }
        </div>

        <HorizontalCard IsComplete=true
                        Description="Description Here"
                        CardName="Blazor"
                        IconUrl="icons8-executive-64.png"
                        OnClickCallback="@ToggleBlazorSteps" />

        <div class="ps-3">
            @if (BlazorSteps)
            {
                <CloseButtonSVG OnClickCallback="@ToggleBlazorSteps" />
                @foreach (var project in Projects.Where(x => x.Area == Area.Blazor))
                {
                    <DashboardProjectCard Project="project"
                                          Status="completed" />
                }
            }
        </div>

        <HorizontalCard IsComplete=true
                        Description="Description Here"
                        CardName="MAUI"
                        IconUrl="icons8-executive-64.png"
                        OnClickCallback="@ToggleMauiSteps" />

        <div class="ps-3">
            @if (MauiSteps)
            {
                <CloseButtonSVG OnClickCallback="@ToggleMauiSteps" />
                @foreach (var project in Projects.Where(x => x.Area == Area.MAUI))
                {
                    <DashboardProjectCard Project="project"
                                          Status="completed" />
                }
            }
        </div>
    </div>
}

@code {
    private List<Project> Projects;
    private bool Steps;
    private bool MVCSteps;
    private bool ReactSteps;
    private bool AngularSteps;
    private bool BlazorSteps;
    private bool MauiSteps;

    protected async override Task OnInitializedAsync()
    {
        Projects = ProjectHelper.GetProjects();
    }

    private void ToggleSteps() => Steps = !Steps;
    private void ToggleMVCSteps() => MVCSteps = !MVCSteps;
    private void ToggleReactSteps() => ReactSteps = !ReactSteps;
    private void ToggleAngularSteps() => AngularSteps = !AngularSteps;
    private void ToggleBlazorSteps() => BlazorSteps = !BlazorSteps;
    private void ToggleMauiSteps() => MauiSteps = !MauiSteps;
}
