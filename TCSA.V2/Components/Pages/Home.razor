@page "/"
@using TCSA.V2.Components.Main
@using TCSA.V2.Components.UI
@using TCSA.V2.Helpers
@using TCSA.V2.Models
@using static TCSA.V2.Helpers.Enums

<MainBanner />
<HowItWorksArea Articles=@Articles />
<FirstStepsArea Articles=@Articles />

<div class="container certificate-container">
    <div class="row d-flex justify-content-center">
        <Card Type=Enums.CardType.Project
              Id=@CertificationProject.Id
              Slug="@CertificationProject.Slug"
              Title=@CertificationProject.Title
              Description=@CertificationProject.Description
              IconUrl=@CertificationProject.IconUrl />
    </div>
</div>

<div class="container w-75">
    <div class="row d-flex justify-content-center title">
        <h1 id="console-area"></h1>
        <img id="console_title" class="area-title" src="img/Titles/console-title.png" />
    </div>
    <div class="row d-flex justify-content-center">
        <Card Type="CardType.Article"
              Id=@ConsoleArticle.Id
              Slug=@ConsoleArticle.Slug
              Title=@ConsoleArticle.Title
              Description=@ConsoleArticle.Description
              IconUrl=@ConsoleArticle.IconUrl />
    </div>
    <div class="row d-flex justify-content-center">

        @foreach (var project in Projects.Where(x => x.Area == Area.Console && x.Id != 52 && x.Id != 75))
        {
            <Card Type="CardType.Project"
                  Id=@project.Id
                  Slug="@project.Slug"
                  Title=@project.Title
                  Description=@project.Description
                  IconUrl=@project.IconUrl />
        }

        <Card Type=@CardType.Article
              Id=@GraduationArticle.Id
              Slug=@GraduationArticle.Slug
              Title=@GraduationArticle.Title
              Description=@GraduationArticle.Description
              IconUrl=@GraduationArticle.IconUrl />
    </div>
</div>

@code {
    protected List<Project> Projects = new();
    protected List<Article> Articles = new();
    protected Project CertificationProject = new();
    protected Article ConsoleArticle = new();
    protected Article GraduationArticle = new();

    protected override async Task OnInitializedAsync()
    {
        Articles = ArticleHelper.GetArticles();
        Projects = ProjectHelper.GetProjects();
        CertificationProject = Projects.Single(x => x.Id == 75);
        ConsoleArticle = Articles.Single(x => x.Id == 9);
        GraduationArticle = Articles.Single(x => x.Id == 10);

    }
}

<style>
    .certificate-container {
        background-color: black;
        padding-bottom: 50px;
        padding-top: 50px;
    }
</style>