@page "/dashboard"
@using TCSA.V2.Components.Dashboard.Shared
@using TCSA.V2.Components.UI
@using TCSA.V2.Components.UI.SVGs
@using TCSA.V2.Data
@using TCSA.V2.Helpers
@using TCSA.V2.Models
@using TCSA.V2.Services
@using System.Security.Claims;

@layout DashboardLayout
@rendermode InteractiveServer

<div class="mt-5">
    @if (User != null)
    {
        <DashboardHeader Level=@User.Level
                         BeltImgUrl="/img/Belts/white.png"
                         FlagUrl="/img/Flags/earth.png"
                         ExperiencePoints=@User.ExperiencePoints
                         Ranking=1
                         DisplayName=@User.DisplayName />

        <DashboardFoundationsArea />

        <DashboardConsoleArea />

        <DashboardApplyForJobsArea />

        <DashboardFullStackArea />

        <DashboardAuthArea />

        <DashboardCloudArea />

        <DashboardSQLArea />

        <DashboardChallengesArea />
    }
</div>

@code {
    [Inject] private AuthenticationStateProvider AuthenticationState { get; set; }
    [Inject] private IProjectService ProjectService { get; set; }
    [Inject] private IUserService UserService { get; set; }

    private ApplicationUser User;
    private string UserId;
    private bool FoundationSteps;

    private List<Article>? Articles;
    private List<Project>? Projects;
    protected List<DashboardAreaInfo> Areas = new();

    protected async override Task OnInitializedAsync()
    {
        Articles = ArticleHelper.GetArticles();
        Projects = ProjectHelper.GetProjects();

        var AuthSate = await AuthenticationState.GetAuthenticationStateAsync();

        if (AuthSate.User.Identity.IsAuthenticated)
        {
            var claims = AuthSate.User;
            UserId = claims.FindFirstValue(ClaimTypes.NameIdentifier);
            User = await UserService.GetUserById(UserId);
        }
    }
}
